#!/bin/bash

# Generate comprehensive README.md from markdown documentation tree
# This script creates a single README.md file by combining all command documentation

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}Generating comprehensive README.md...${NC}"

# Build the binary first
echo -e "${YELLOW}Building gqlt...${NC}"
mkdir -p dist
CGO_ENABLED=0 go build -ldflags="-s -w" -o dist/gqlt ./cmd

# Generate markdown tree to temp directory
TEMP_DIR=$(mktemp -d)
echo -e "${YELLOW}Generating markdown tree to $TEMP_DIR...${NC}"
./dist/gqlt docs --format md --tree --output "$TEMP_DIR"

# Create comprehensive README.md
echo -e "${YELLOW}Creating comprehensive README.md...${NC}"
cat > README.md << 'EOF'
# gqlt

A minimal, composable command-line client for running GraphQL operations.

## Overview

gqlt is a minimal, composable command-line client for running GraphQL operations.
It supports queries, mutations, subscriptions, introspection, and more.

### AI-Friendly Features

- Structured JSON output with `--format json`
- Machine-readable error codes for automation
- Quiet mode (`--quiet`) for script integration
- Comprehensive help with examples

### Quick Start

```bash
# Basic query execution
gqlt run --url https://api.example.com/graphql --query "{ users { id name } }"

# Using configuration
gqlt config create production
gqlt config set production endpoint https://api.example.com/graphql
gqlt run --query "{ users { id name } }"
```

## Installation

### From Source

```bash
git clone https://github.com/kluzzebass/gqlt.git
cd gqlt
go build -o gqlt ./cmd
```

### From Releases

Download the latest release for your platform from the [releases page](https://github.com/kluzzebass/gqlt/releases).

## Documentation

EOF

# Add each command's documentation to README.md
for md_file in "$TEMP_DIR"/*.md; do
    if [ -f "$md_file" ]; then
        filename=$(basename "$md_file")
        command_name="${filename%.md}"
        
        # Skip the root command file (gqlt.md) as we already have overview
        if [ "$command_name" = "gqlt" ]; then
            continue
        fi
        
        echo -e "${YELLOW}Adding $command_name documentation...${NC}"
        
        # Convert command name to readable format
        # Remove gqlt_ prefix and convert to Title Case
        readable_name=$(echo "$command_name" | sed -E 's/^gqlt_([a-z]+)(_[a-z]+)*/\1\2/' | sed 's/_/ /g' | awk '{for(i=1;i<=NF;i++){$i=toupper(substr($i,1,1)) substr($i,2)};print}')
        
        # Add command section header
        echo "" >> README.md
        echo "## $readable_name" >> README.md
        echo "" >> README.md
        
        # Extract content from the markdown file, cleaning up artifacts
        tail -n +2 "$md_file" | \
        sed '/^### SEE ALSO$/,$d' | \
        sed '/^###### Auto generated by spf13\/cobra/d' | \
        sed '/^$/N;/^\n$/d' >> README.md
    fi
done

# Add footer
cat >> README.md << 'EOF'

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

---

*This documentation is auto-generated from the command structure. Last updated: $(date)*
EOF

# Clean up temp directory
rm -rf "$TEMP_DIR"

echo -e "${GREEN}âœ… Comprehensive README.md generated successfully!${NC}"
echo -e "${GREEN}ðŸ“„ README.md now contains all command documentation${NC}"
